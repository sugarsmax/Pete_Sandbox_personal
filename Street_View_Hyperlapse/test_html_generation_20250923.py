#!/usr/bin/env python3
"""
Test script to verify HTML generation functionality
"""

import asyncio
import sys
from datetime import datetime
from pathlib import Path

# Test configuration
test_config = {
    "street_view_url": "https://www.google.com/maps/@45.7163833,-121.7932542,3a,75y,144.37h,90.67t/data=!3m7!1e1!3m5!1su3LhvJxitRAZDayceNgpwA!2e0!6shttps:%2F%2Fstreetviewpixels-pa.googleapis.com%2Fv1%2Fthumbnail%3Fcb_client%3Dmaps_sv.tactile%26w%3D900%26h%3D600%26pitch%3D-0.6682222242483249%26panoid%3Du3LhvJxitRAZDayceNgpwA%26yaw%3D144.37070199180678!7i16384!8i8192?entry=ttu&g_ep=EgoyMDI1MDkxNy4wIKXMDSoASAFQAw%3D%3D",
    "output_dir": "frames/test_html_20250923",
    "num_frames": 10,
    "navigation_direction": "forward",
    "delay_seconds": 2.0,
    "viewport_width": 1920,
    "viewport_height": 1080
}

class StreetViewHyperlapseTest:
    def __init__(self, config):
        """Initialize with configuration settings."""
        self.config = config
        self.output_dir = Path(config["output_dir"])
        
        # Create output directory
        self.output_dir.mkdir(parents=True, exist_ok=True)
        print(f"üìÅ Output directory ready: {self.output_dir}")
    
    def create_location_html(self):
        """Create a simple HTML file with the Street View URL link."""
        print("üåê Creating location HTML file...")
        
        # Extract coordinates and info from URL if possible
        url = self.config["street_view_url"]
        session_name = self.output_dir.name
        timestamp = datetime.now().strftime("%B %d, %Y at %H:%M:%S")
        
        html_content = f'''<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Street View Location - {session_name}</title>
    <style>
        body {{
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
            max-width: 800px;
            margin: 40px auto;
            padding: 20px;
            background: #f8f9fa;
        }}
        .container {{
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }}
        h1 {{
            color: #2c3e50;
            text-align: center;
            margin-bottom: 30px;
        }}
        .info-card {{
            background: #e3f2fd;
            padding: 20px;
            border-radius: 8px;
            margin: 20px 0;
            border-left: 4px solid #2196f3;
        }}
        .street-view-link {{
            background: #4285f4;
            color: white;
            padding: 15px 30px;
            border-radius: 6px;
            text-decoration: none;
            display: inline-block;
            font-weight: 500;
            transition: background 0.3s;
            margin: 20px 0;
        }}
        .street-view-link:hover {{
            background: #3367d6;
        }}
        .settings {{
            background: #f5f5f5;
            padding: 15px;
            border-radius: 6px;
            margin-top: 20px;
        }}
        .settings h3 {{
            margin-top: 0;
            color: #666;
        }}
        .emoji {{
            font-style: normal;
            font-size: 1.2em;
        }}
    </style>
</head>
<body>
    <div class="container">
        <h1><span class="emoji">üìç</span> Street View Hyperlapse Location</h1>
        
        <div class="info-card">
            <h3><span class="emoji">üìä</span> Capture Session Info</h3>
            <p><strong>Session:</strong> {session_name}</p>
            <p><strong>Created:</strong> {timestamp}</p>
            <p><strong>Navigation:</strong> {self.config.get("navigation_direction", "forward").title()}</p>
            <p><strong>Frames to capture:</strong> {self.config.get("num_frames", "N/A")}</p>
        </div>
        
        <div style="text-align: center;">
            <a href="{url}" target="_blank" class="street-view-link">
                <span class="emoji">üó∫Ô∏è</span> Open in Google Street View
            </a>
        </div>
        
        <div class="settings">
            <h3><span class="emoji">‚öôÔ∏è</span> Capture Settings</h3>
            <p><strong>Direction:</strong> {self.config.get("navigation_direction", "forward")}</p>
            <p><strong>Delay:</strong> {self.config.get("delay_seconds", "N/A")} seconds</p>
            <p><strong>Resolution:</strong> {self.config.get("viewport_width", "N/A")}x{self.config.get("viewport_height", "N/A")}</p>
        </div>
        
        <div style="text-align: center; margin-top: 30px; color: #666; font-size: 0.9em;">
            <p>Generated by Street View Hyperlapse Automation</p>
        </div>
    </div>
</body>
</html>'''
        
        # Save HTML file
        html_file = self.output_dir / "location.html"
        with open(html_file, 'w', encoding='utf-8') as f:
            f.write(html_content)
        
        print(f"‚úÖ Location HTML created: {html_file}")
        return str(html_file)

def main():
    """Test the HTML generation functionality."""
    print("üß™ Testing HTML generation functionality...")
    print("=" * 50)
    
    # Create test instance
    test_instance = StreetViewHyperlapseTest(test_config)
    
    # Generate HTML
    html_path = test_instance.create_location_html()
    
    # Verify file exists
    if Path(html_path).exists():
        print("‚úÖ HTML file successfully created!")
        print(f"üìÅ File location: {html_path}")
        print(f"üìÑ File size: {Path(html_path).stat().st_size} bytes")
    else:
        print("‚ùå HTML file was not created!")
        return False
    
    print("=" * 50)
    print("üéâ Test completed successfully!")
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
